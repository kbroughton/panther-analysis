# This is a basic workflow to help you get started with Actions

name: Panther CI/CD Workflow
permissions:
  id-token: write
  contents: read

# Controls when the workflow will run
on:  
  push:
    paths:
      - 'detections/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs: 
   download_pantherlog_tool:
    runs-on: ubuntu-latest
    name: Downloading the pantherlog tool
    steps: 
      - name: Download pantherlog & unzip 
        run: curl -sSO "https://panther-community-us-east-1.s3.amazonaws.com/v1.32.4/tools/linux-amd64-pantherlog.zip" && unzip linux-amd64-pantherlog.zip
      - name: Create a pantherlog artifact
        uses: actions/upload-artifact@v3
        with:
          name: pantherlog
          path: pantherlog
          retention-days: 1
   run_schema_tests:    
    runs-on: ubuntu-latest
    name: Run schema tests with pantherlog
    needs: [download_pantherlog_tool]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Download Pantherlog tool from artifacts
        uses: actions/download-artifact@v3
        with: 
          name: pantherlog
      - name: Make pantherlog executable
        run: sudo chmod +x pantherlog
      - name: Perform schema tests with pantherlog
        run: ./pantherlog test detections/schemas
        
   run_unit_tests:    
    runs-on: ubuntu-latest
    name: Unit Testing with panther_analysis_tool
    needs: [download_pantherlog_tool, run_schema_tests]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set python version  
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install pipenv
        run: pip install pipenv
      - name: Install python dependencies and panther_analysis_tool
        run: make install
      - name: Run unit tests within the Detections folder
        run: pipenv run panther_analysis_tool test --path detections
     
#    panther_analysis_tool_upload:        
#     runs-on: ubuntu-latest
#     name: panther_analysis_tool upload to panther console
#     needs: [download_pantherlog_tool, run_schema_tests, run_unit_tests]
#     env: |
#       PANTHER_API_TOKEN:  ${{ secrets.PantherApiToken }}
#       PANTHER_API_HOST: "https://api.<your-panther>.runpanther.net/public/graphql"
#     steps:
#       - name: Checkout the repo
#         uses: actions/checkout@v2 
#       - name: Set python version  
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.9'
#       - name: Install pipenv
#         run: pip install pipenv
#       - name: Install python dependencies and panther_analysis_tool
#         run: make install
#       - name: Upload all AnalysisType=rule in the detections folder to your Panther instance 
#         run: pipenv run panther_analysis_tool upload --path detections --skip-tests --filter AnalysisType=rule
#       - name: Upload custom schemas to Panther Console
#         run: pipenv run panther_analysis_tool update-custom-schemas --path schemas/
  
